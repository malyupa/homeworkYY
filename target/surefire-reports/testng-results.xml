<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="21" passed="15" failed="6" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-01-30T17:05:42 MSK" name="CheckingIsWorkMethodTest" finished-at="2022-01-30T17:05:42 MSK" duration-ms="9">
    <groups>
    </groups>
    <test started-at="2022-01-30T17:05:42 MSK" name="testPenWorkability" finished-at="2022-01-30T17:05:42 MSK" duration-ms="3">
      <class name="CheckingIsWorkMethodTest">
        <test-method signature="testPenWorkInability(int)[pri:0, instance:CheckingIsWorkMethodTest@2145b572]" started-at="2022-01-30T17:05:42 MSK" name="testPenWorkInability" data-provider="parseInvalidData" finished-at="2022-01-30T17:05:42 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPenWorkInability -->
        <test-method signature="testPenWorkInability(int)[pri:0, instance:CheckingIsWorkMethodTest@2145b572]" started-at="2022-01-30T17:05:42 MSK" name="testPenWorkInability" data-provider="parseInvalidData" finished-at="2022-01-30T17:05:42 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPenWorkInability -->
        <test-method signature="testPenWorkability(int)[pri:0, instance:CheckingIsWorkMethodTest@2145b572]" started-at="2022-01-30T17:05:42 MSK" name="testPenWorkability" data-provider="parseValidData" finished-at="2022-01-30T17:05:42 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPenWorkability -->
        <test-method signature="testPenWorkability(int)[pri:0, instance:CheckingIsWorkMethodTest@2145b572]" started-at="2022-01-30T17:05:42 MSK" name="testPenWorkability" data-provider="parseValidData" finished-at="2022-01-30T17:05:42 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[999]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPenWorkability -->
      </class> <!-- CheckingIsWorkMethodTest -->
    </test> <!-- testPenWorkability -->
    <test started-at="2022-01-30T17:05:42 MSK" name="testPenWorkInability" finished-at="2022-01-30T17:05:42 MSK" duration-ms="2">
      <class name="CheckingIsWorkMethodTest">
        <test-method signature="testPenWorkInability(int)[pri:0, instance:CheckingIsWorkMethodTest@3427b02d]" started-at="2022-01-30T17:05:42 MSK" name="testPenWorkInability" data-provider="parseInvalidData" finished-at="2022-01-30T17:05:42 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPenWorkInability -->
        <test-method signature="testPenWorkInability(int)[pri:0, instance:CheckingIsWorkMethodTest@3427b02d]" started-at="2022-01-30T17:05:42 MSK" name="testPenWorkInability" data-provider="parseInvalidData" finished-at="2022-01-30T17:05:42 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPenWorkInability -->
        <test-method signature="testPenWorkability(int)[pri:0, instance:CheckingIsWorkMethodTest@3427b02d]" started-at="2022-01-30T17:05:42 MSK" name="testPenWorkability" data-provider="parseValidData" finished-at="2022-01-30T17:05:42 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[999]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPenWorkability -->
        <test-method signature="testPenWorkability(int)[pri:0, instance:CheckingIsWorkMethodTest@3427b02d]" started-at="2022-01-30T17:05:42 MSK" name="testPenWorkability" data-provider="parseValidData" finished-at="2022-01-30T17:05:42 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPenWorkability -->
      </class> <!-- CheckingIsWorkMethodTest -->
    </test> <!-- testPenWorkInability -->
  </suite> <!-- CheckingIsWorkMethodTest -->
  <suite started-at="2022-01-30T17:05:42 MSK" name="CheckingWriteMethodTest" finished-at="2022-01-30T17:05:42 MSK" duration-ms="3">
    <groups>
    </groups>
    <test started-at="2022-01-30T17:05:42 MSK" name="testReturnsCorrectWord" finished-at="2022-01-30T17:05:42 MSK" duration-ms="3">
      <class name="CheckingWriteMethodTest">
        <test-method signature="testReturnsCorrectWord(java.lang.String,int,double)[pri:0, instance:CheckingWriteMethodTest@130161f7]" started-at="2022-01-30T17:05:42 MSK" name="testReturnsCorrectWord" data-provider="parseValidData" finished-at="2022-01-30T17:05:42 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Horse]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReturnsCorrectWord -->
        <test-method signature="testReturnsCorrectWord(java.lang.String,int,double)[pri:0, instance:CheckingWriteMethodTest@130161f7]" started-at="2022-01-30T17:05:42 MSK" name="testReturnsCorrectWord" data-provider="parseValidData" finished-at="2022-01-30T17:05:42 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Driver]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReturnsCorrectWord -->
        <test-method signature="testReturnsCorrectWord(java.lang.String,int,double)[pri:0, instance:CheckingWriteMethodTest@130161f7]" started-at="2022-01-30T17:05:42 MSK" name="testReturnsCorrectWord" data-provider="parseValidData" finished-at="2022-01-30T17:05:42 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Television]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReturnsCorrectWord -->
        <test-method signature="testReturnsCorrectWord(java.lang.String,int,double)[pri:0, instance:CheckingWriteMethodTest@130161f7]" started-at="2022-01-30T17:05:42 MSK" name="testReturnsCorrectWord" data-provider="parseValidData" finished-at="2022-01-30T17:05:42 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Comp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReturnsCorrectWord -->
        <test-method signature="testReturnsCorrectWord(java.lang.String,int,double)[pri:0, instance:CheckingWriteMethodTest@130161f7]" started-at="2022-01-30T17:05:42 MSK" name="testReturnsCorrectWord" data-provider="parseValidData" finished-at="2022-01-30T17:05:42 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Flowers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-5.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReturnsCorrectWord -->
        <test-method signature="testReturnsCorrectWord(java.lang.String,int,double)[pri:0, instance:CheckingWriteMethodTest@130161f7]" started-at="2022-01-30T17:05:42 MSK" name="testReturnsCorrectWord" data-provider="parseValidData" finished-at="2022-01-30T17:05:42 MSK" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Dog]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[300]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[110.1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.StringIndexOutOfBoundsException">
            <message>
              <![CDATA[begin 0, end 300, length 3]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.StringIndexOutOfBoundsException: begin 0, end 300, length 3
at java.base/java.lang.String.checkBoundsBeginEnd(String.java:4601)
at java.base/java.lang.String.substring(String.java:2704)
at Pen.write(Pen.java:33)
at CheckingWriteMethodTest.testReturnsCorrectWord(CheckingWriteMethodTest.java:29)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.StringIndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReturnsCorrectWord -->
        <test-method signature="testReturnsCorrectWord(java.lang.String,int,double)[pri:0, instance:CheckingWriteMethodTest@130161f7]" started-at="2022-01-30T17:05:42 MSK" name="testReturnsCorrectWord" data-provider="parseValidData" finished-at="2022-01-30T17:05:42 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReturnsCorrectWord -->
        <test-method signature="testReturnsCorrectWord(java.lang.String,int,double)[pri:0, instance:CheckingWriteMethodTest@130161f7]" started-at="2022-01-30T17:05:42 MSK" name="testReturnsCorrectWord" data-provider="parseValidData" finished-at="2022-01-30T17:05:42 MSK" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[A book with images]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.75]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at CheckingWriteMethodTest.testReturnsCorrectWord(CheckingWriteMethodTest.java:29)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReturnsCorrectWord -->
      </class> <!-- CheckingWriteMethodTest -->
    </test> <!-- testReturnsCorrectWord -->
  </suite> <!-- CheckingWriteMethodTest -->
  <suite started-at="2022-01-30T17:05:42 MSK" name="CheckingGetColorMethodTest" finished-at="2022-01-30T17:05:42 MSK" duration-ms="68">
    <groups>
    </groups>
    <test started-at="2022-01-30T17:05:42 MSK" name="testColor" finished-at="2022-01-30T17:05:42 MSK" duration-ms="33">
      <class name="CheckingGetColorMethodTest">
        <test-method signature="testColor(int,double,java.lang.String)[pri:0, instance:CheckingGetColorMethodTest@4b14c583]" started-at="2022-01-30T17:05:42 MSK" name="testColor" finished-at="2022-01-30T17:05:42 MSK" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[RED]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at CheckingGetColorMethodTest.testColor(CheckingGetColorMethodTest.java:9)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColor -->
      </class> <!-- CheckingGetColorMethodTest -->
    </test> <!-- testColor -->
    <test started-at="2022-01-30T17:05:42 MSK" name="testOtherColor" finished-at="2022-01-30T17:05:42 MSK" duration-ms="1">
      <class name="CheckingGetColorMethodTest">
        <test-method signature="testColor(int,double,java.lang.String)[pri:0, instance:CheckingGetColorMethodTest@9353778]" started-at="2022-01-30T17:05:42 MSK" name="testColor" finished-at="2022-01-30T17:05:42 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[BLUE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColor -->
      </class> <!-- CheckingGetColorMethodTest -->
    </test> <!-- testOtherColor -->
    <test started-at="2022-01-30T17:05:42 MSK" name="testColorNotSet" finished-at="2022-01-30T17:05:42 MSK" duration-ms="1">
      <class name="CheckingGetColorMethodTest">
        <test-method signature="testColor(int,double,java.lang.String)[pri:0, instance:CheckingGetColorMethodTest@21de60b4]" started-at="2022-01-30T17:05:42 MSK" name="testColor" finished-at="2022-01-30T17:05:42 MSK" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at CheckingGetColorMethodTest.testColor(CheckingGetColorMethodTest.java:9)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColor -->
      </class> <!-- CheckingGetColorMethodTest -->
    </test> <!-- testColorNotSet -->
  </suite> <!-- CheckingGetColorMethodTest -->
  <suite started-at="2022-01-30T17:05:42 MSK" name="CheckingWorkMethodTestThrowsArithmExceptionTest" finished-at="2022-01-30T17:05:42 MSK" duration-ms="2">
    <groups>
    </groups>
    <test started-at="2022-01-30T17:05:42 MSK" name="testExpectedArithmeticException" finished-at="2022-01-30T17:05:42 MSK" duration-ms="2">
      <class name="CheckingWorkMethodTestThrowsArithmExceptionTest">
        <test-method signature="testExpectedArithmeticException(java.lang.String,int,double)[pri:0, instance:CheckingWorkMethodTestThrowsArithmExceptionTest@291ae]" started-at="2022-01-30T17:05:42 MSK" name="testExpectedArithmeticException" data-provider="parseValidDataException" finished-at="2022-01-30T17:05:42 MSK" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Comp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method CheckingWorkMethodTestThrowsArithmExceptionTest.testExpectedArithmeticException(java.lang.String,int,double)[pri:0, instance:CheckingWorkMethodTestThrowsArithmExceptionTest@291ae] should have thrown an exception of type class java.lang.ArithmeticException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method CheckingWorkMethodTestThrowsArithmExceptionTest.testExpectedArithmeticException(java.lang.String,int,double)[pri:0, instance:CheckingWorkMethodTestThrowsArithmExceptionTest@291ae] should have thrown an exception of type class java.lang.ArithmeticException
at org.testng.internal.invokers.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:81)
at org.testng.internal.invokers.TestInvoker.considerExceptions(TestInvoker.java:853)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:714)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExpectedArithmeticException -->
        <test-method signature="testExpectedArithmeticException(java.lang.String,int,double)[pri:0, instance:CheckingWorkMethodTestThrowsArithmExceptionTest@291ae]" started-at="2022-01-30T17:05:42 MSK" name="testExpectedArithmeticException" data-provider="parseValidDataException" finished-at="2022-01-30T17:05:42 MSK" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method CheckingWorkMethodTestThrowsArithmExceptionTest.testExpectedArithmeticException(java.lang.String,int,double)[pri:0, instance:CheckingWorkMethodTestThrowsArithmExceptionTest@291ae] should have thrown an exception of type class java.lang.ArithmeticException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method CheckingWorkMethodTestThrowsArithmExceptionTest.testExpectedArithmeticException(java.lang.String,int,double)[pri:0, instance:CheckingWorkMethodTestThrowsArithmExceptionTest@291ae] should have thrown an exception of type class java.lang.ArithmeticException
at org.testng.internal.invokers.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:81)
at org.testng.internal.invokers.TestInvoker.considerExceptions(TestInvoker.java:853)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:714)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExpectedArithmeticException -->
      </class> <!-- CheckingWorkMethodTestThrowsArithmExceptionTest -->
    </test> <!-- testExpectedArithmeticException -->
  </suite> <!-- CheckingWorkMethodTestThrowsArithmExceptionTest -->
</testng-results>
