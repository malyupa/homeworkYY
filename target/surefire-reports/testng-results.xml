<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="32" passed="27" failed="5" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-01-29T18:56:26 MSK" name="CheckingIsWorkMethodTest" finished-at="2022-01-29T18:56:26 MSK" duration-ms="9">
    <groups>
    </groups>
    <test started-at="2022-01-29T18:56:26 MSK" name="testPenWorkability" finished-at="2022-01-29T18:56:26 MSK" duration-ms="3">
      <class name="CheckingIsWorkMethodTest">
        <test-method signature="testPenWorkInability(int)[pri:0, instance:CheckingIsWorkMethodTest@27ce24aa]" started-at="2022-01-29T18:56:26 MSK" name="testPenWorkInability" data-provider="parseInvalidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPenWorkInability -->
        <test-method signature="testPenWorkInability(int)[pri:0, instance:CheckingIsWorkMethodTest@27ce24aa]" started-at="2022-01-29T18:56:26 MSK" name="testPenWorkInability" data-provider="parseInvalidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPenWorkInability -->
        <test-method signature="testPenWorkability(int)[pri:0, instance:CheckingIsWorkMethodTest@27ce24aa]" started-at="2022-01-29T18:56:26 MSK" name="testPenWorkability" data-provider="parseValidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPenWorkability -->
        <test-method signature="testPenWorkability(int)[pri:0, instance:CheckingIsWorkMethodTest@27ce24aa]" started-at="2022-01-29T18:56:26 MSK" name="testPenWorkability" data-provider="parseValidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPenWorkability -->
      </class> <!-- CheckingIsWorkMethodTest -->
    </test> <!-- testPenWorkability -->
    <test started-at="2022-01-29T18:56:26 MSK" name="testPenWorkInability" finished-at="2022-01-29T18:56:26 MSK" duration-ms="2">
      <class name="CheckingIsWorkMethodTest">
        <test-method signature="testPenWorkInability(int)[pri:0, instance:CheckingIsWorkMethodTest@c33b74f]" started-at="2022-01-29T18:56:26 MSK" name="testPenWorkInability" data-provider="parseInvalidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPenWorkInability -->
        <test-method signature="testPenWorkability(int)[pri:0, instance:CheckingIsWorkMethodTest@c33b74f]" started-at="2022-01-29T18:56:26 MSK" name="testPenWorkability" data-provider="parseValidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPenWorkability -->
        <test-method signature="testPenWorkInability(int)[pri:0, instance:CheckingIsWorkMethodTest@c33b74f]" started-at="2022-01-29T18:56:26 MSK" name="testPenWorkInability" data-provider="parseInvalidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPenWorkInability -->
        <test-method signature="testPenWorkability(int)[pri:0, instance:CheckingIsWorkMethodTest@c33b74f]" started-at="2022-01-29T18:56:26 MSK" name="testPenWorkability" data-provider="parseValidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPenWorkability -->
      </class> <!-- CheckingIsWorkMethodTest -->
    </test> <!-- testPenWorkInability -->
  </suite> <!-- CheckingIsWorkMethodTest -->
  <suite started-at="2022-01-29T18:56:26 MSK" name="CheckingWriteMethodCompleteWordTest" finished-at="2022-01-29T18:56:26 MSK" duration-ms="5">
    <groups>
    </groups>
    <test started-at="2022-01-29T18:56:26 MSK" name="testWriteCompleteWord" finished-at="2022-01-29T18:56:26 MSK" duration-ms="5">
      <class name="CheckingWriteMethodCompleteWordTest">
        <test-method signature="testWriteCompleteWord(java.lang.String,int,double)[pri:0, instance:CheckingWriteMethodCompleteWordTest@16ec5519]" started-at="2022-01-29T18:56:26 MSK" name="testWriteCompleteWord" data-provider="parseValidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Comp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteCompleteWord -->
        <test-method signature="testWriteCompleteWord(java.lang.String,int,double)[pri:0, instance:CheckingWriteMethodCompleteWordTest@16ec5519]" started-at="2022-01-29T18:56:26 MSK" name="testWriteCompleteWord" data-provider="parseValidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Television]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteCompleteWord -->
        <test-method signature="testWriteCompleteWord(java.lang.String,int,double)[pri:0, instance:CheckingWriteMethodCompleteWordTest@16ec5519]" started-at="2022-01-29T18:56:26 MSK" name="testWriteCompleteWord" data-provider="parseValidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteCompleteWord -->
      </class> <!-- CheckingWriteMethodCompleteWordTest -->
    </test> <!-- testWriteCompleteWord -->
  </suite> <!-- CheckingWriteMethodCompleteWordTest -->
  <suite started-at="2022-01-29T18:56:26 MSK" name="CheckingWriteMethodPartOfWordTest" finished-at="2022-01-29T18:56:26 MSK" duration-ms="4">
    <groups>
    </groups>
    <test started-at="2022-01-29T18:56:26 MSK" name="testWritePartOfWord" finished-at="2022-01-29T18:56:26 MSK" duration-ms="4">
      <class name="CheckingWriteMethodPartOfWordTest">
        <test-method signature="testWritePartOfWord(java.lang.String,int,double)[pri:0, instance:CheckingWriteMethodPartOfWordTest@7722c3c3]" started-at="2022-01-29T18:56:26 MSK" name="testWritePartOfWord" data-provider="parseValidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="2" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Dog]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Do] but found [Dog]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Do] but found [Dog]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at CheckingWriteMethodPartOfWordTest.testWritePartOfWord(CheckingWriteMethodPartOfWordTest.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWritePartOfWord -->
        <test-method signature="testWritePartOfWord(java.lang.String,int,double)[pri:0, instance:CheckingWriteMethodPartOfWordTest@7722c3c3]" started-at="2022-01-29T18:56:26 MSK" name="testWritePartOfWord" data-provider="parseValidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Driver]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWritePartOfWord -->
        <test-method signature="testWritePartOfWord(java.lang.String,int,double)[pri:0, instance:CheckingWriteMethodPartOfWordTest@7722c3c3]" started-at="2022-01-29T18:56:26 MSK" name="testWritePartOfWord" data-provider="parseValidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[A book with images]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.75]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [A book wi] but found [A book ]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [A book wi] but found [A book ]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at CheckingWriteMethodPartOfWordTest.testWritePartOfWord(CheckingWriteMethodPartOfWordTest.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWritePartOfWord -->
      </class> <!-- CheckingWriteMethodPartOfWordTest -->
    </test> <!-- testWritePartOfWord -->
  </suite> <!-- CheckingWriteMethodPartOfWordTest -->
  <suite started-at="2022-01-29T18:56:26 MSK" name="CheckingGetColorMethodTest" finished-at="2022-01-29T18:56:26 MSK" duration-ms="62">
    <groups>
    </groups>
    <test started-at="2022-01-29T18:56:26 MSK" name="testColor" finished-at="2022-01-29T18:56:26 MSK" duration-ms="32">
      <class name="CheckingGetColorMethodTest">
        <test-method signature="testColor(int,double,java.lang.String)[pri:0, instance:CheckingGetColorMethodTest@4386f16]" started-at="2022-01-29T18:56:26 MSK" name="testColor" finished-at="2022-01-29T18:56:26 MSK" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[RED]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at CheckingGetColorMethodTest.testColor(CheckingGetColorMethodTest.java:9)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColor -->
      </class> <!-- CheckingGetColorMethodTest -->
    </test> <!-- testColor -->
    <test started-at="2022-01-29T18:56:26 MSK" name="testOtherColor" finished-at="2022-01-29T18:56:26 MSK" duration-ms="1">
      <class name="CheckingGetColorMethodTest">
        <test-method signature="testColor(int,double,java.lang.String)[pri:0, instance:CheckingGetColorMethodTest@30ee2816]" started-at="2022-01-29T18:56:26 MSK" name="testColor" finished-at="2022-01-29T18:56:26 MSK" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[BLUE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColor -->
      </class> <!-- CheckingGetColorMethodTest -->
    </test> <!-- testOtherColor -->
    <test started-at="2022-01-29T18:56:26 MSK" name="testColorNotSet" finished-at="2022-01-29T18:56:26 MSK" duration-ms="1">
      <class name="CheckingGetColorMethodTest">
        <test-method signature="testColor(int,double,java.lang.String)[pri:0, instance:CheckingGetColorMethodTest@1ddf84b8]" started-at="2022-01-29T18:56:26 MSK" name="testColor" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at CheckingGetColorMethodTest.testColor(CheckingGetColorMethodTest.java:9)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColor -->
      </class> <!-- CheckingGetColorMethodTest -->
    </test> <!-- testColorNotSet -->
  </suite> <!-- CheckingGetColorMethodTest -->
  <suite started-at="2022-01-29T18:56:26 MSK" name="CheckingDoSomethingElseMethodTest" finished-at="2022-01-29T18:56:26 MSK" duration-ms="1">
    <groups>
    </groups>
    <test started-at="2022-01-29T18:56:26 MSK" name="testNotNullResult" finished-at="2022-01-29T18:56:26 MSK" duration-ms="1">
      <class name="CheckingDoSomethingElseMethodTest">
        <test-method signature="testNotNullResult(int,double,java.lang.String)[pri:0, instance:CheckingDoSomethingElseMethodTest@6c80d78a]" started-at="2022-01-29T18:56:26 MSK" name="testNotNullResult" data-provider="parseValidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[RED]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNotNullResult -->
        <test-method signature="testNotNullResult(int,double,java.lang.String)[pri:0, instance:CheckingDoSomethingElseMethodTest@6c80d78a]" started-at="2022-01-29T18:56:26 MSK" name="testNotNullResult" data-provider="parseValidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNotNullResult -->
        <test-method signature="testNotNullResult(int,double,java.lang.String)[pri:0, instance:CheckingDoSomethingElseMethodTest@6c80d78a]" started-at="2022-01-29T18:56:26 MSK" name="testNotNullResult" data-provider="parseValidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[GREEN]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNotNullResult -->
      </class> <!-- CheckingDoSomethingElseMethodTest -->
    </test> <!-- testNotNullResult -->
  </suite> <!-- CheckingDoSomethingElseMethodTest -->
  <suite started-at="2022-01-29T18:56:26 MSK" name="CheckingWriteMethodEmptyInkTest" finished-at="2022-01-29T18:56:26 MSK" duration-ms="6">
    <groups>
    </groups>
    <test started-at="2022-01-29T18:56:26 MSK" name="testReturnsEmptyWord" finished-at="2022-01-29T18:56:26 MSK" duration-ms="1">
      <class name="CheckingWriteMethodEmptyInkTest">
        <test-method signature="testReturnsEmptyWord(java.lang.String,int)[pri:0, instance:CheckingWriteMethodEmptyInkTest@20deea7f]" started-at="2022-01-29T18:56:26 MSK" name="testReturnsEmptyWord" data-provider="parseValidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Dog]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReturnsEmptyWord -->
        <test-method signature="testReturnsEmptyWord(java.lang.String,int)[pri:0, instance:CheckingWriteMethodEmptyInkTest@20deea7f]" started-at="2022-01-29T18:56:26 MSK" name="testReturnsEmptyWord" data-provider="parseValidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Horse]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReturnsEmptyWord -->
        <test-method signature="testReturnsNotEmptyWord(java.lang.String,int)[pri:0, instance:CheckingWriteMethodEmptyInkTest@20deea7f]" started-at="2022-01-29T18:56:26 MSK" name="testReturnsNotEmptyWord" data-provider="parseInvalidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Life]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReturnsNotEmptyWord -->
        <test-method signature="testReturnsNotEmptyWord(java.lang.String,int)[pri:0, instance:CheckingWriteMethodEmptyInkTest@20deea7f]" started-at="2022-01-29T18:56:26 MSK" name="testReturnsNotEmptyWord" data-provider="parseInvalidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[H]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReturnsNotEmptyWord -->
      </class> <!-- CheckingWriteMethodEmptyInkTest -->
    </test> <!-- testReturnsEmptyWord -->
    <test started-at="2022-01-29T18:56:26 MSK" name="testReturnsNotEmptyWord" finished-at="2022-01-29T18:56:26 MSK" duration-ms="1">
      <class name="CheckingWriteMethodEmptyInkTest">
        <test-method signature="testReturnsEmptyWord(java.lang.String,int)[pri:0, instance:CheckingWriteMethodEmptyInkTest@393671df]" started-at="2022-01-29T18:56:26 MSK" name="testReturnsEmptyWord" data-provider="parseValidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Dog]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReturnsEmptyWord -->
        <test-method signature="testReturnsEmptyWord(java.lang.String,int)[pri:0, instance:CheckingWriteMethodEmptyInkTest@393671df]" started-at="2022-01-29T18:56:26 MSK" name="testReturnsEmptyWord" data-provider="parseValidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Horse]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReturnsEmptyWord -->
        <test-method signature="testReturnsNotEmptyWord(java.lang.String,int)[pri:0, instance:CheckingWriteMethodEmptyInkTest@393671df]" started-at="2022-01-29T18:56:26 MSK" name="testReturnsNotEmptyWord" data-provider="parseInvalidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Life]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReturnsNotEmptyWord -->
        <test-method signature="testReturnsNotEmptyWord(java.lang.String,int)[pri:0, instance:CheckingWriteMethodEmptyInkTest@393671df]" started-at="2022-01-29T18:56:26 MSK" name="testReturnsNotEmptyWord" data-provider="parseInvalidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[H]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReturnsNotEmptyWord -->
      </class> <!-- CheckingWriteMethodEmptyInkTest -->
    </test> <!-- testReturnsNotEmptyWord -->
  </suite> <!-- CheckingWriteMethodEmptyInkTest -->
  <suite started-at="2022-01-29T18:56:26 MSK" name="CheckingInkAmountAfterTypingTest" finished-at="2022-01-29T18:56:26 MSK" duration-ms="2">
    <groups>
    </groups>
    <test started-at="2022-01-29T18:56:26 MSK" name="testInkAmountAfterTyping" finished-at="2022-01-29T18:56:26 MSK" duration-ms="2">
      <class name="CheckingInkAmountAfterTypingTest">
        <test-method signature="testInkAmountAfterTyping(java.lang.String,int,double)[pri:0, instance:CheckingInkAmountAfterTypingTest@61862a7f]" started-at="2022-01-29T18:56:26 MSK" name="testInkAmountAfterTyping" data-provider="parseValidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Cat]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInkAmountAfterTyping -->
        <test-method signature="testInkAmountAfterTyping(java.lang.String,int,double)[pri:0, instance:CheckingInkAmountAfterTypingTest@61862a7f]" started-at="2022-01-29T18:56:26 MSK" name="testInkAmountAfterTyping" data-provider="parseValidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Horse]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-1] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-1] but found [0]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:1240)
at org.testng.Assert.assertEquals(Assert.java:1274)
at CheckingInkAmountAfterTypingTest.testInkAmountAfterTyping(CheckingInkAmountAfterTypingTest.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInkAmountAfterTyping -->
        <test-method signature="testInkAmountAfterTyping(java.lang.String,int,double)[pri:0, instance:CheckingInkAmountAfterTypingTest@61862a7f]" started-at="2022-01-29T18:56:26 MSK" name="testInkAmountAfterTyping" data-provider="parseValidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[The mouse]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInkAmountAfterTyping -->
        <test-method signature="testInkAmountAfterTyping(java.lang.String,int,double)[pri:0, instance:CheckingInkAmountAfterTypingTest@61862a7f]" started-at="2022-01-29T18:56:26 MSK" name="testInkAmountAfterTyping" data-provider="parseValidData" finished-at="2022-01-29T18:56:26 MSK" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInkAmountAfterTyping -->
      </class> <!-- CheckingInkAmountAfterTypingTest -->
    </test> <!-- testInkAmountAfterTyping -->
  </suite> <!-- CheckingInkAmountAfterTypingTest -->
</testng-results>
